{"ast":null,"code":"var _jsxFileName = \"/Users/hanwenzhang/Desktop/React/src/components/NewExpense/NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = { ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false); //set it back to false to the form once the expense submitted\n  };\n\n  const startEditingHandler = () => {\n    //this function is trigger when the button is clicked then form showing up\n    setIsEditing(true); //change from false default to true\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false); //set it to false when we click to stop editing the form, the cancel button\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isEditing &&\n    /*#__PURE__*/\n    //check if isEditing is false\n    _jsxDEV(\"button\", {\n      onClick: startEditingHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), isEditing &&\n    /*#__PURE__*/\n    //check if isEditing is true, when the button clicked, then show the editing form\n    _jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler,\n      onChange: stopEditingHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewExpense, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["/Users/hanwenzhang/Desktop/React/src/components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","isEditing","setIsEditing","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","startEditingHandler","stopEditingHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMM,sBAAsB,GAAIC,kBAAD,IAAwB;AACrD,UAAMC,WAAW,GAAG,EAClB,GAAGD,kBADe;AAElBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFc,KAApB;AAIAT,IAAAA,KAAK,CAACU,YAAN,CAAmBL,WAAnB;AACAH,IAAAA,YAAY,CAAC,KAAD,CAAZ,CANqD,CAMhC;AACtB,GAPD;;AASA,QAAMS,mBAAmB,GAAG,MAAM;AAChC;AACAT,IAAAA,YAAY,CAAC,IAAD,CAAZ,CAFgC,CAEZ;AACrB,GAHD;;AAKA,QAAMU,kBAAkB,GAAG,MAAM;AAC/BV,IAAAA,YAAY,CAAC,KAAD,CAAZ,CAD+B,CACV;AACtB,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACG,CAACD,SAAD;AAAA;AAAgB;AACf;AAAQ,MAAA,OAAO,EAAEU,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIGV,SAAS;AAAA;AAAM;AACd,YAAC,WAAD;AACE,MAAA,iBAAiB,EAAEE,sBADrB;AAEE,MAAA,QAAQ,EAAES;AAFZ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAlCD;;GAAMb,U;;KAAAA,U;AAoCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\n\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false); //set it back to false to the form once the expense submitted\n  };\n\n  const startEditingHandler = () => {\n    //this function is trigger when the button is clicked then form showing up\n    setIsEditing(true); //change from false default to true\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false); //set it to false when we click to stop editing the form, the cancel button\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && ( //check if isEditing is false\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && ( //check if isEditing is true, when the button clicked, then show the editing form\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onChange={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n"]},"metadata":{},"sourceType":"module"}