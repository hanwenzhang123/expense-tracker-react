{"ast":null,"code":"var _jsxFileName = \"/Users/hanwenzhang/Desktop/React/src/components/ExpenseItem.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpressItem() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"March 28, 2021\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Car Insurance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"$294.67\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ExpressItem;\nexport default ExpressItem; //you can only have one root element per return statement (JSX code)\n//solution: wrap everything in another div and use () to signal JS that it is one statement\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpressItem\");","map":{"version":3,"sources":["/Users/hanwenzhang/Desktop/React/src/components/ExpenseItem.js"],"names":["ExpressItem"],"mappings":";;;AAAA,SAASA,WAAT,GAAuB;AACrB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KAXQA,W;AAaT,eAAeA,WAAf,C,CAEA;AACA","sourcesContent":["function ExpressItem() {\n  return (\n    <div>\n      <div>March 28, 2021</div>\n      <div>\n        <h2>Car Insurance</h2>\n\n        <div>$294.67</div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExpressItem;\n\n//you can only have one root element per return statement (JSX code)\n//solution: wrap everything in another div and use () to signal JS that it is one statement\n"]},"metadata":{},"sourceType":"module"}