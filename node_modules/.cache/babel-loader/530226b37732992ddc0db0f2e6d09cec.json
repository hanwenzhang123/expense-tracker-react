{"ast":null,"code":"var _jsxFileName = \"/Users/hanwenzhang/Desktop/React/src/components/ExpenseItem.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpressItem() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ExpressItem;\nexport default ExpressItem; //you can only have one root element per return statement (JSX code)\n//solution: wrap everything in another div and use () to signal JS that it is one statement\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpressItem\");","map":{"version":3,"sources":["/Users/hanwenzhang/Desktop/React/src/components/ExpenseItem.js"],"names":["ExpressItem"],"mappings":";;;AAAA,SAASA,WAAT,GAAuB;AACnB,sBACA;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,6BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAJJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAeH;;KAhBQA,W;AAkBT,eAAeA,WAAf,C,CAEA;AACA","sourcesContent":["function ExpressItem() {\n    return (\n    <div>\n        <div>\n            Date\n        </div>\n        <div> \n        <h2>\n            Title\n            </h2>\n        </div>\n        <div>\n            Amount\n        </div>\n    </div>\n    )\n}\n\nexport default ExpressItem;\n\n//you can only have one root element per return statement (JSX code)\n//solution: wrap everything in another div and use () to signal JS that it is one statement"]},"metadata":{},"sourceType":"module"}