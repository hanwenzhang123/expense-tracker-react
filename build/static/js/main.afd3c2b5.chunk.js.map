{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","console","log","onChangeFiler","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","setTitle","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afd3c2b5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\n\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    console.log(event.target.value);\n    props.onChangeFiler(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\n\nimport \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React, { useState } from \"react\";\n\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n  const [title, setTitle] = useState(props.title);\n\n  const clickHandler = () => {\n    setTitle(\"Updated!\");\n    console.log(title);\n  };\n\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n        <button onClick={clickHandler}>Change Title</button>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found No Expenses.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\n\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFiler={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}